model = QUICK
simpletype-restriction-policy = USE_BASETYPE
retype.{http\://hl7.org/fhir}boolean = System.Boolean
retype.{http\://hl7.org/fhir}code = System.String
retype.{http\://hl7.org/fhir}date = System.DateTime
retype.{http\://hl7.org/fhir}dateTime = System.DateTime
retype.{http\://hl7.org/fhir}decimal = System.Decimal
retype.{http\://hl7.org/fhir}id = System.String
retype.{http\://hl7.org/fhir}instant = System.DateTime
retype.{http\://hl7.org/fhir}integer = System.Integer
retype.{http\://hl7.org/fhir}oid = System.String
retype.{http\://hl7.org/fhir}positiveInt = System.Integer
retype.{http\://hl7.org/fhir}string = System.String
retype.{http\://hl7.org/fhir}time = System.Time
retype.{http\://hl7.org/fhir}uri = System.String
retype.{http\://hl7.org/fhir}unsignedInt = System.Integer
retype.{http\://hl7.org/fhir}CodeableConcept = System.Concept
retype.{http\://hl7.org/fhir}Coding = System.Code
#TODO: Support interval and list in the type mappings
#retype.{http\://hl7.org/fhir}Period = Interval<System.DateTime>
retype.{http\://hl7.org/fhir}Quantity = System.Quantity
#TODO: Support interval and list in the type mappings
#retype.{http\://hl7.org/fhir}Range = Interval<System.Quantity>
retype.{http\://hl7.org/fhir}Reference = System.Any

#TODO: Support retrievable configurations
#retrievable.{http\://hl7.org/fhir}Observation = true

#TODO: Support identifier configurations
#identifier.{http\://hl7.org/fhir}Observation = observation-qicore-qicore-observation

#TODO: Support primary code configurations
#primary-code.{http\://hl7.org/fhir}Observation = code

#TODO: Some kind of pattern-based configuration to convert FHIR's binding types to Strings, Codes, or Concepts
#For example:
#
#<xs:complexType name="AdministrativeGender">\
#  <xs:annotation>
#    <xs:documentation></xs:documentation>
#    <xs:documentation>If the element is present, it must have either a @value, an @id, or extensions</xs:documentation>
#  </xs:annotation>
#  <xs:complexContent>
#     <xs:extension base="Element">
#       <xs:attribute name="value" type="AdministrativeGender-list" use="optional"/>
#     </xs:extension>
#   </xs:complexContent>
#</xs:complexType>
#
#Currently generates to:
#
#<ns4:typeInfo xsi:type="ns4:ClassInfo" name="QUICK.AdministrativeGender" baseType="QUICK.Element">
#  <ns4:element name="value" type="System.String"/>
#</ns4:typeInfo>
#
#But would ideally just be a System.String.
#
#The pattern is anything that extends Element, and only has a single attribute called "value".




