<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:hl7-org:elm:r1 ../Src/cql-lm/schema/elm/library.xsd">
	<identifier id="ExampleELMLibrary"/>
	<schemaIdentifier id=""/>
	<parameters>
		<def name="ABC" parameterType="List&lt;MissedAppointmentType&gt;"/>
	</parameters>
	<statements>
		<!-- 
			[Encounter, Performance: "Inpatient"] E
			  with [Condition: "Acute Pharyngitis"] P
				where P.effectiveTime overlaps after E.performanceTime
			  where duration in days of E.performanceTime >= 120
			  return tuple { id: E.id, lengthOfStay: duration in days of E.performanceTime }
			  sort by lengthOfStay desc
		-->
		<def name="PharyngitisConditions" context="PATIENT">
			<expression xsi:type="ClinicalRequest" dataType="ConditionObservationOccurrence" cardinality="Multiple" codeProperty="code">
				<codes xsi:type="ValueSetRef" name="AcutePharyngitis"/>
			</expression>
		</def>
		
		<def name="InpatientEncounters" context="PATIENT">
			<expression xsi:type="ClinicalRequest" dataType="EncounterPerformanceOccurrence" cardinality="Multiple" codeProperty="encounterType" dateProperty="performanceTime" idProperty="id">
				<codes xsi:type="ValueSetRef" name="Inpatient"/>
			</expression>
		</def>
		
		<def name="EncountersWithPharyngitis" context="PATIENT">
			<expression xsi:type="Filter" scope="E">
				<source xsi:type="ExpressionRef" name="InpatientEncounters"/>
				<condition xsi:type="IsNotEmpty">
					<operand xsi:type="Filter" scope="P">
						<source xsi:type="ExpressionRef" name="PharyngitisConditions"/>
						<condition xsi:type="OverlapsAfter">
							<operand xsi:type="Property" path="effectiveTime" scope="P"/>
							<operand xsi:type="Property" path="performanceTime" scope="E"/>
						</condition>
					</operand>
				</condition>
			</expression>
		</def>
		
		<def name="EncountersLessThan120Days">
			<expression xsi:type="Filter" scope="E">
				<source xsi:type="ExpressionDef" name="EncountersWithPharyngitis"/>
				<condition xsi:type="GreaterOrEqual">
					<operand xsi:type="DateDiff">
						<startDate xsi:type="Begin">
							<operand xsi:type="Property" path="performanceTime" scope="E"/>
						</startDate>
						<endDate xsi:type="End">
							<operand xsi:type="Property" path="performanceTime" scope="E"/>
						</endDate>
						<granularity xsi:type="Literal" valueType="DateGranularity" value="day"/>
					</operand>
					<operand xsi:type="Literal" valueType="xs:int" value="120"></operand>
				</condition>
			</expression>
		</def>
		
		<def name="EncountersWithLengthOfStay">
			<expression xsi:type="ForEach" scope="E">
				<source xsi:type="ExpressionRef" name="EncountersLessThan120Days"/>
				<element xsi:type="ObjectExpression">
					<property name="id">
						<value xsi:type="Property" path="id" scope="E"/>
					</property>
					<property name="lengthOfStay">
						<value xsi:type="DateDiff">
							<startDate xsi:type="Begin">
								<operand xsi:type="Property" path="performanceTime" scope="E"/>
							</startDate>
							<endDate xsi:type="End">
								<operand xsi:type="Property" path="performanceTime" scope="E"/>
							</endDate>
							<granularity xsi:type="Literal" valueType="DateGranularity" value="day"/>
						</value>
					</property>
				</element>
			</expression>
		</def>
		
		<def name="FullQuery" context="PATIENT">
			<expression xsi:type="Sort" orderBy="lengthOfStay">
				<source xsi:type="ExpressionDef" name="EncountersWithLengthOfStay"/>
			</expression>
		</def>
	</statements>
</library>
